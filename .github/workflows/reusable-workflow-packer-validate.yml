---
# reusable-workflow.yml

on:
  workflow_call:
    secrets:
      ENV_SECRETS:
        # yamllint disable-line rule:line-length
        description: "Pass GitHub secrets to be exported as env vars"
        required: true

concurrency:
  # yamllint disable-line rule:line-length
  group: reusable-${{ github.workflow }}-${{ github.run_id }}
  cancel-in-progress: true

jobs:
  parse-credentials:
    if: false
    runs-on: ubuntu-latest
    env:
      ENV_SECRETS: ${{ secrets.ENV_SECRETS }}
    steps:
      - name: "Dump secrets"
        shell: bash
        run: |
          echo "$ENV_SECRETS"

      - name: Decode credentials as environment variables
        shell: bash
        run: |
          set -x

          for kval in $ENV_SECRETS; do
            # extract the key name
            # key="$(echo "$kval" | sed 's/=.*//g')"
            key="${kval%%=*}"
            if [[ "$key" =~ ^(CLOUDS_ENV.*|CLOUDS_YAML.*)$ ]]; then
                # extract the value in b64 format
                encoded_val="${kval#*=}"
                # decode the value
                # decoded_val="$(echo "$encoded_val" | base64 -di | base64 -di)"
                # construct the entire 'key=value' string
                # decoded_kval="$(echo "$key")=$(echo "$decoded_val")"
                # mask to value
                echo ::add-mask::"$encoded_val"
                # Add to env
                if (( $(grep -c . <<<"$encoded_val") > 1 )); then
                  printf '%s<<EOF\n%s\nEOF\n' "$key" "$encoded_val" >> "$GITHUB_ENV"
                else
                  printf '%s\n' "$key=$encoded_val" >> "$GITHUB_ENV"
                fi
            fi
          done

      - name: Validate credentials
        shell: bash
        run: |
          echo "CLOUDS_ENV_2XB64=$CLOUDS_ENV_2XB64"
          echo "CLOUDS_ENV_2XB64=$CLOUDS_YAML_2XB64"
          echo "CLOUDS_ENV_B64=$CLOUDS_ENV_B64"
          echo "CLOUDS_YAML_B64=$CLOUDS_YAML_B64"

      - name: Check credentials escape chars if its the same as set/read on repo
        run: |
          set -x
          if [[ ${CLOUDS_ENV_2XB64} != '' ]]; then
              echo "CLOUDS_ENV_2XB64 matches value";
              echo "$CLOUDS_ENV_2XB64"
          fi

          if [[ ${CLOUDS_YAML_2XB64} != '' ]]; then
              echo "CLOUDS_YAML_2XB64 matches value";
              echo "$CLOUDS_YAML_2XB64"
          fi

      - name: Create a file and check
        shell: bash
        run: |
          set -x

          # Secrets are now available as masked environment variable.

          if [[ "$CLOUDS_ENV_2XB64" != '' ]]; then
              clouds_env_2xb64="$CLOUDS_ENV_2XB64"
              echo "${clouds_env_2xb64}" | base64 -di | base64 -di > "${GITHUB_WORKSPACE}/cloud-env-2x.pkrvars.hcl"
              echo "cloud-env-2x.pkrvars.hcl"
              cat "${GITHUB_WORKSPACE}/cloud-env-2x.pkrvars.hcl"
              md5_clouds_env_2xb64=$(md5sum "${GITHUB_WORKSPACE}/cloud-env-2x.pkrvars.hcl")
              if [[ "${md5_clouds_env_2xb64%% *}" != 'cad3df72b9c706631ac31f5e07873c6c' ]]; then
                  echo "Error: CLOUDS_ENV_2XB64 is not the same value as stored!"
              fi
          fi

          if [[ "$CLOUDS_ENV_B64" != '' ]]; then
              clouds_env_b64="$CLOUDS_ENV_B64"
              echo "${clouds_env_b64}" | base64 -di > "${GITHUB_WORKSPACE}/cloud-env.pkrvars.hcl"
              echo "cloud-env.pkrvars.hcl"
              cat "${GITHUB_WORKSPACE}/cloud-env.pkrvars.hcl"
              md5_clouds_env_b64=$(md5sum "${GITHUB_WORKSPACE}/cloud-env.pkrvars.hcl")
              if [[ "${md5_clouds_env_b64%% *}" != 'f5d2974491693b67a7c7dc527c7f3d87' ]]; then
                  echo "Error: CLOUDS_ENV_B64 is not the same value as stored!"
              fi
          fi

          if [[ "$CLOUDS_YAML_2XB64" != '' ]]; then
              mkdir -p "$HOME/.config/openstack"
              clouds_yaml_2xb64="$CLOUDS_YAML_2XB64"
              echo "${clouds_yaml_2xb64}" | base64 -di | base64 -di > "$HOME/.config/openstack/clouds-2x.yaml"
              cat "$HOME/.config/openstack/clouds-2x.yaml"
              md5_clouds_yaml_2xb64=$(md5sum "$HOME/.config/openstack/clouds-2x.yaml")
              if [[ "${md5_clouds_yaml_2xb64%% *}" != 'b71e9c24fa8432d26c99e9b21efd0561' ]]; then
                  echo "Error: CLOUDS_YAML_2XB64 is not the same value as stored!"
              fi
          fi

          if [[ "$CLOUDS_YAML_B64" != '' ]]; then
              mkdir -p "$HOME/.config/openstack"
              clouds_yaml_b64="$CLOUDS_YAML_B64"
              echo "${clouds_yaml_b64}" |  base64 -di > "$HOME/.config/openstack/clouds.yaml"
              cat "$HOME/.config/openstack/clouds.yaml"
              md5_clouds_yaml_b64=$(md5sum "$HOME/.config/openstack/clouds.yaml")
              if [[ "${md5_clouds_yaml_b64%% *}" != 'f5d2974491693b67a7c7dc527c7f3d87' ]]; then
                  echo "Error: CLOUDS_YAML_B64 is not the same value as stored!"
              fi
          fi
